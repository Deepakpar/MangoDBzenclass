1. Find all the topics and tasks which are thought in the month of October
db.topics.aggregate([
  {     $match: {
      topic_date: {
        $gte: "2020-10-01",
        $lt: "2020-11-01"
      }   
  }  }, 
  {
    $lookup: {
      from: "tasks",
      localField: "_id",
      foreignField: "topic_id",	
      as: "tasks"
  }  
}
]);

2. Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.companydrives.find({
  drive_date: {
    $gte: "2020-10-15",
    $lte: "2020-10-31"
  }});

3. Find all the company drives and students who are appeared for the placement.
db.companydrives.aggregate([
  {
    $lookup: {
      from: "driveattendance",
      localField: "_id",
      foreignField: "drive_id",
      as: "attendees"
    }
  },
  { $unwind: "$attendees" },
  {
    $lookup: {
      from: "users",
      localField: "attendees.user_id",
      foreignField: "_id",
      as: "student"
    }
  },
  { $unwind: "$student" },
  {
    $project: {
      company_name: 1,
      drive_date: 1,
      student_name: "$student.name"
    }
  }
]);

4. Find the number of problems solved by the user in codekata
db.companydrives.aggregate([
  {
    $lookup: {
      from: "driveattendance",
      localField: "_id",
      foreignField: "drive_id",
      as: "attendees"
    }
  },
  { $unwind: "$attendees" },
  {
    $lookup: {
      from: "users",
      localField: "attendees.user_id",
      foreignField: "_id",
      as: "student"
    }
  },
  { $unwind: "$student" },
  {
    $project: {
      company_name: 1,
      drive_date: 1,
      student_name: "$student.name"
    }  }]);

5. Find all the mentors with who has the mentee's count more than 15

db.mentors.find({
  mentee_count: { $gt: 15 }
});

6. Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020
db.attendance.aggregate([
  {
    $match: {
      status: "Absent",
      date: {
        $gte: ISODate("2020-10-20"),
        $lte: ISODate("2020-10-31")
      }
    }
  },
  {
    $lookup: {
      from: "tasks",
      let: { uid: "$user_id" },
      pipeline: [
        {
          $match: {
            $expr: {
              $and: [
                { $eq: ["$user_id", "$$uid"] },
                { $gte: ["$due_date", ISODate("2020-10-20")] },
                { $lte: ["$due_date", ISODate("2020-10-31")] },
                { $eq: ["$submitted", false] }
              ]
            }
          }
        }
      ],
      as: "pending_tasks"
    }
  },
  {
    $match: { "pending_tasks.0": { $exists: true } }
  },
  {
    $group: {
      _id: null,
      users_absent_and_not_submitted: { $sum: 1 }
    }
  }
]);




